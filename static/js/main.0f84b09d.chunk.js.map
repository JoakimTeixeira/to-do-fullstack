{"version":3,"sources":["contexts/TaskContext.jsx","components/TaskForm/TaskList.jsx","components/TaskForm/TaskForm.jsx","App.jsx","index.jsx"],"names":["TaskContext","createContext","TaskContextProvider","children","useState","tasks","setTasks","isEdit","setIsEdit","cachedId","useRef","formSubmitButton","titleDisable","Provider","value","addTasks","newTask","updateIsEdit","boolean","fetchTasks","databaseTasks","handleDelete","id","Axios","delete","newTasks","filter","task","handleEditForm","setTitle","setDescription","title","description","current","disabled","innerText","classList","remove","add","TaskList","useContext","useEffect","a","axios","get","data","fetchDatabase","className","length","scope","map","style","width","maxWidth","wordWrap","Row","Col","md","type","onClick","TaskForm","cleanFields","updateEditedTask","put","headers","updateNewTask","isFinished","post","responseTask","handleSubmit","e","preventDefault","Form","Group","controlId","Label","Control","ref","onChange","target","handleTitle","handleDescription","Button","variant","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f84b09d.chunk.js","sourcesContent":["import React, { createContext, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios';\n\nexport const TaskContext = createContext();\n\nexport const TaskContextProvider = ({ children }) => {\n  TaskContextProvider.propTypes = { children: PropTypes.node.isRequired };\n\n  const [tasks, setTasks] = useState([]);\n  const [isEdit, setIsEdit] = useState(false);\n  const cachedId = useRef('');\n  const formSubmitButton = useRef('');\n  const titleDisable = useRef(false);\n\n  const addTasks = (newTask) => {\n    setTasks([...tasks, newTask]);\n  };\n\n  const updateIsEdit = (boolean) => {\n    setIsEdit(boolean);\n  };\n\n  const fetchTasks = (databaseTasks) => {\n    setTasks(databaseTasks);\n  };\n\n  const handleDelete = (id) => {\n    Axios.delete(`https://to-do-fullstack-api.herokuapp.com/tasks/${id}`, null);\n    const newTasks = tasks.filter((task) => task.id !== id);\n    setTasks(newTasks);\n  };\n\n  const handleEditForm = (task, setTitle, setDescription) => {\n    setTitle(task.title);\n    setDescription(task.description);\n    setIsEdit(true);\n    titleDisable.current.disabled = true;\n    cachedId.current = task.id;\n\n    formSubmitButton.current.innerText = 'Edit Task';\n    formSubmitButton.current.classList.remove('btn-primary');\n    formSubmitButton.current.classList.add('btn-dark');\n  };\n\n  return (\n    <TaskContext.Provider\n      value={{\n        tasks,\n        addTasks,\n        updateIsEdit,\n        fetchTasks,\n        handleDelete,\n        handleEditForm,\n        isEdit,\n        cachedId,\n        formSubmitButton,\n        titleDisable,\n      }}\n    >\n      {children}\n    </TaskContext.Provider>\n  );\n};\n","import axios from 'axios';\nimport React, { useContext, useEffect } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { TaskContext } from 'contexts/TaskContext';\nimport PropTypes from 'prop-types';\n\nexport const TaskList = ({ setTitle, setDescription }) => {\n  TaskList.propTypes = {\n    setTitle: PropTypes.func.isRequired,\n    setDescription: PropTypes.func.isRequired,\n  };\n\n  const { tasks, fetchTasks, handleDelete, handleEditForm } = useContext(TaskContext);\n\n  useEffect(() => {\n    const fetchDatabase = async () => {\n      const databaseTasks = await axios.get('https://to-do-fullstack-api.herokuapp.com/tasks/');\n      fetchTasks(databaseTasks.data);\n    };\n    fetchDatabase();\n  }, []);\n\n  return (\n    <table className=\"table table-bordered table-striped bg-white mb-5\">\n      {tasks.length > 0 && (\n        <>\n          <thead>\n            <tr>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks.map((task) => {\n              const { title, description, id } = task;\n              return (\n                <tr key={id}>\n                  <td style={{ width: '30%', maxWidth: '70px', wordWrap: 'break-word' }}>\n                    {title}\n                  </td>\n                  <td style={{ width: '47%', maxWidth: '100px', wordWrap: 'break-word' }}>\n                    {description}\n                  </td>\n                  <td style={{ width: '23%', maxWidth: '40px' }}>\n                    <Row className=\"w-100\">\n                      <Col md={6}>\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-danger m-1\"\n                          onClick={() => handleDelete(id)}\n                        >\n                          <i className=\"fas fa-trash-alt\" />\n                        </button>\n                      </Col>\n                      <Col md={6}>\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-dark m-1\"\n                          onClick={() => handleEditForm(task, setTitle, setDescription)}\n                        >\n                          <i className=\"fas fa-edit\" />\n                        </button>\n                      </Col>\n                    </Row>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </>\n      )}\n    </table>\n  );\n};\n","import Axios from 'axios';\nimport React, { useContext, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { TaskContext } from 'contexts/TaskContext';\nimport { TaskList } from './TaskList';\n\nexport const TaskForm = () => {\n  const {\n    addTasks,\n    fetchTasks,\n    updateIsEdit,\n    isEdit,\n    cachedId,\n    formSubmitButton,\n    titleDisable,\n  } = useContext(TaskContext);\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleDescription = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const cleanFields = () => {\n    setTitle('');\n    setDescription('');\n  };\n\n  const updateEditedTask = async () => {\n    await Axios.put(\n      `https://to-do-fullstack-api.herokuapp.com/tasks/${cachedId.current}`,\n      { description },\n      {\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n\n    const databaseTasks = await Axios.get('https://to-do-fullstack-api.herokuapp.com/tasks/');\n    fetchTasks(databaseTasks.data);\n\n    titleDisable.current.disabled = false;\n    formSubmitButton.current.innerText = 'Submit';\n    formSubmitButton.current.classList.remove('btn-dark');\n    formSubmitButton.current.classList.add('btn-primary');\n\n    cachedId.current = null;\n    updateIsEdit(false);\n    cleanFields();\n  };\n\n  const updateNewTask = async () => {\n    const newTask = {\n      title,\n      description,\n      isFinished: false,\n    };\n\n    const responseTask = await Axios.post(\n      'https://to-do-fullstack-api.herokuapp.com/tasks/register',\n      newTask,\n      {\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n\n    addTasks(responseTask.data);\n    cleanFields();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (title && description) {\n      if (isEdit) {\n        updateEditedTask();\n      } else {\n        updateNewTask();\n      }\n    }\n  };\n\n  return (\n    <>\n      <Form className=\"mt-5 mb-5 bg-light p-5\">\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            ref={titleDisable}\n            type=\"text\"\n            value={title}\n            onChange={(e) => handleTitle(e)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control type=\"text\" value={description} onChange={(e) => handleDescription(e)} />\n        </Form.Group>\n        <Button\n          ref={formSubmitButton}\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={(e) => handleSubmit(e)}\n        >\n          Submit\n        </Button>\n      </Form>\n\n      <TaskList setTitle={setTitle} setDescription={setDescription} />\n    </>\n  );\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { TaskForm } from 'components/TaskForm';\nimport { TaskContextProvider } from 'contexts/TaskContext';\n\nfunction App() {\n  return (\n    <Container>\n      <section className=\"col-12 col-lg-7 mx-auto\">\n        <TaskContextProvider>\n          <TaskForm />\n        </TaskContextProvider>\n      </section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}